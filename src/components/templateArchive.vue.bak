<template>
<div id="archiveWrapper" class="templateArchive">
  <div class="col-1-3">

    <p class="aboutHeader" id="aboutArchive">Archive</p>
    <table>
      <tr v-on:click="sortBy('itemname')">
        <td data-sort="itemname">Title</td>
        <td data-sort="itemyear">Year</td>
        <td data-sort="itemtype">Type</td>
      </tr>
      <br>
      <span class="list">
        <tr v-on:click="loadArchive(archiveItem)" v-for="archiveItem in aboutArchiveObject">
          <td class="itemname">{{archiveItem.item_name}}</td>
          <td class="itemyear">{{archiveItem.item_year}}</td>
          <td class="itemtype">{{archiveItem.item_type[0]}}</td>
        </tr>
      </span>
    </table>
  </div>

  <div v-if="typeof this.activeArchiveItem != Object" class="col-2-3">
    <p v-html="activeArchiveItem.item_name"></p>
    <p v-html="activeArchiveItem.item_text"></p>
    <div>
      <img v-for="image in activeArchiveItem.item_media" v-bind:src="image.sizes.medium_large" />
    </div>
  </div>

</div>
</template>

<script>
export default {
  name: 'templateArchive',
  props: ['aboutArchiveObject'],

  data() {

    return {
      activeArchiveItem: Object,
      archiveList:Object,
    }
  },
  methods: {
    loadArchive: function(active_item) {
      this.activeArchiveItem = active_item
    },

    sortBy: function(sortKey) {
      this.archiveList.sort('itemyear', {
        order: "desc"
      });
    },

  },

  watch:{
    aboutArchiveObject:function(){

      // initiate when aboutArchiveObject revieved from parent

      var options = {
        valueNames: [ 'itemname', 'itemyear','itemtype' ]
      };

      this.archiveList = new List('archiveWrapper', options);


    }
  },

}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped lang="scss">@import '../assets/globalVars.scss';

#archiveWrapper {
    table {

      .list{
        display: table-row-group;
      }
        width: 100%;
        // background: red
        tr:first-of-type {
            td {
                border-bottom: 1px solid slategray;
                // border-top: 1px solid slategray;

            }
        }
        td {
            border-bottom: 1px solid slategray;

        }
    }
}
</style>
